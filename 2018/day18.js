function totalResourceValue (input, turns = 10) {
  let state = input

  const memo = {}
  memo[stringify(state)] = turns

  while (turns-- > 0) {
    state = advance(state)
    const key = stringify(state)
    if (key in memo) {
      const skip = memo[key] - turns
      const fastforward = Math.floor(turns / skip)
      turns -= fastforward * skip
    } else {
      memo[key] = turns
    }
  }
  return count(state, '|') * count(state, '#')
}

function advance (state) {
  const offsets = [
    [-1, -1],
    [0, -1],
    [1, -1],
    [-1, 0],
    [1, 0],
    [-1, 1],
    [0, 1],
    [1, 1]
  ]

  function next (type, x, y) {
    const adjacents = {'.': 0, '|': 0, '#': 0}
    offsets.forEach(offset => {
      const i = x + offset[0]
      const j = y + offset[1]
      if (i < 0 || i >= 50) return
      if (j < 0 || j >= 50) return
      adjacents[state[j][i]]++
    })
    switch (type) {
      case '.':
        return adjacents['|'] >= 3 ? '|' : '.'
      case '|':
        return adjacents['#'] >= 3 ? '#' : '|'
      case '#':
        return adjacents['#'] >= 1 && adjacents['|'] >= 1 ? '#' : '.'
    }
  }

  return state.map((row, y) => row.map((type, x) => next(type, x, y)))
}

function count (state, type) {
  return state.reduce((sum, row) => sum + row.filter(t => t === type).length, 0)
}

function stringify (state) {
  return state.map(row => row.join('')).join('')
}

const test = `
#.|..#...|#...#...|.|....|..|...#.|...#..|.|.|.|#.
.....|.#...|....#|....||#.|###.......#.#|.##.|...|
...#|.....||..|..|||.#......#..|.#..|..|..#.....|.
..|..#.....###.#|.....|.|...##.##......|#...|##...
....###.......|...|..||...#||.##..|.|.|.#|..|.#...
|..|#......|#.|..#.#....||...|.#||....|#....#.#...
.|..#.|.|..|.#|.#|.#......#..###.|||.#.|.....#...#
..|.|.....||......|...|#....|....##.|.|..|..#.#...
.......##.#..|.|.........|...|..#|.|#.#..||#|...|.
.|###|...|.....|..#.|..|#...|.............|.......
|........##.|.#.##.|##.##..#|..#|.|..|.|....|.....
|.....#|#..#|.|..#..#|...|.#..|#.........|#....|..
..|.#........#........#..||#|.#.........#.|#||.|||
.|##...#..||.....|.|..|..|...|...|..#.....#.###|..
..#|.#|#...|#.|||#..#|#...##.|||#...#.|.|...#.|...
...|...#|..###...#.....|..|...|#..........|..|.|..
#||||.|#.##|....|..||...|##|.....|.|#||..##..||.||
.||.#..|..|||#.#.#|....#..##|#|...|.|#..||..#...#.
..#..#.||.|...|.|||.|#|..#..|.#.........|...#.#|..
|...||#.####||.......#..|#|.#|..|#..#.|....###|#|.
.|.|||.#..#..#.####.##..|#||.#..|#...|...||....|..
.....||#|...#.##........|..##...#...|..##|#.##....
..|#.|#....|##.#|#.#|..#.#......|#....###.##...#.|
..|.#....##...|||..|.#|#..|..|..||#.....#.#..#....
..|..||..##....#.......#..|......|...#.#.##...||#.
..............######|#...|###.##......#...#.|..#.|
.#..|......##..#..||###|.||....#...||..#.##.#.#.||
##.##......##.#|..|.#.#....|#|#|..|#.##|...|.||#..
|.#...##.|#|.|..|.||.|||.......##..#.#..|...##.|..
....#...#...#||.#.#..#...##.#.#...|#.#..#...|..#.|
....#....|.....||.....|.|#.|.|..||..|#........|...
..#...#...|...###.|..#.#.||||....|.....#|........|
##|#..#.#|#..|.||..||..|.||##..##|#.|.##|....#....
|.#|#||.#...#|...#...#|.##.|..##..||#.||#|......|#
|#|..|.||...#...|####...#....#|...|..#..##...|###.
....##.#.|..|......##...|#.###..#....|###.##.||##|
|..#....#..|#.........|....|....##...#....#.#..|..
.......|..|..#...#....##..#.|.#|..#..|.#.#..|||...
..##||.....#..|....|..|#.|#...#.#|....#|#..||#..|.
.#...##.#..#..#..#..|#..#.......||...#.#.|.##...|.
#..|.#.#...#.|...##|..#.#|##.......|.|..#.|#.....#
..|...#|..#|...#......#..#....|.|.#..#..|#|...#..#
.#..##.|.#.##|..##..||.....|#|.|...|..|..#.....|##
.....#...|....|..|..........##.#..|..###.||#...#|#
.#....|......#.#.#.#..#..#..|.....|..|..|.|...#..#
#|....##....###......#.|..|.#..|..|..|||.##.#....#
.|||##.||......#|.#...|......|...|...#.#..#..#..|#
|.#...#|.#|.##......##...#....|.|..|....#.||#.....
.#..|.|.|...|#..#.####|..#..###.....#.##...###.#..
.#.........|.#......|...##.#|...|.####..|...#.###|
`.trim().split('\n').map(line => line.split(''))

console.log(totalResourceValue(test))
console.log(totalResourceValue(test, 1000000000))
