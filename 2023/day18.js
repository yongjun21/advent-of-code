const assert = require('assert');

const DIRECTION = ['R', 'D', 'L', 'U'];

const OFFSET = {
  R: [1, 0],
  D: [0, 1],
  L: [-1, 0],
  U: [0, -1]
};

const EDGE_TYPE = {
  RR: '-',
  DD: '|',
  LL: '-',
  UU: '|',
  RD: '7',
  DL: 'J',
  LU: 'L',
  UR: 'F',
  UL: '7',
  LD: 'F',
  DR: 'L',
  RU: 'J'
};

function fillLagoon(input) {
  let xs = new Set();
  let ys = new Set();
  let x = 0;
  let y = 0;
  input.forEach(row => {
    xs.add(x);
    ys.add(y);
    const { direction, steps } = row;
    x += OFFSET[direction][0] * steps;
    y += OFFSET[direction][1] * steps;
  });
  assert(x === 0 && y === 0);
  xs = [...xs].sort((a, b) => a - b);
  ys = [...ys].sort((a, b) => a - b);

  const width = xs.length;
  const height = ys.length;

  const edges = new Map();
  let prevDirection = '';
  const iStart = xs.indexOf(0);
  const jStart = ys.indexOf(0);
  let i = iStart;
  let j = jStart;
  input.forEach(row => {
    const { direction, steps } = row;
    x += OFFSET[direction][0] * steps;
    y += OFFSET[direction][1] * steps;
    const nextI = xs.indexOf(x);
    const nextJ = ys.indexOf(y);

    let jumps = Math.abs(nextI === i ? nextJ - j : nextI - i);

    while (jumps-- > 0) {
      edges.set(j * width + i, EDGE_TYPE[prevDirection + direction]);
      i += OFFSET[direction][0];
      j += OFFSET[direction][1];
      prevDirection = direction;
    }
  });
  assert(i === iStart && j === jStart);

  edges.set(
    j * width + i,
    EDGE_TYPE[input[input.length - 1].direction + input[0].direction]
  );

  let count = 0;
  let greenCount;
  for (let j = 0; j < height; j++) {
    if (j > 0) count += (ys[j] - ys[j - 1] - 1) * greenCount;
    let color = 'red';
    let greenStart = -1;
    let strictGreenStart = -1;
    greenCount = 0;
    for (let i = 0; i < width; i++) {
      const type = edges.get(j * width + i);
      if (type) {
        if (type === '|') {
          if (color === 'red') {
            color = 'green';
            greenStart = xs[i];
            strictGreenStart = xs[i];
          } else {
            color = 'red';
            greenCount += xs[i] - greenStart - 1;
            count += xs[i] - strictGreenStart - 1;
          }
        }
        if (type === 'L') {
          if (color === 'red') color = 'yellow';
          else count += xs[i] - strictGreenStart - 1;
        }
        if (type === 'F') {
          if (color === 'red') {
            color = 'green';
            greenStart = xs[i];
          } else {
            color = 'yellow';
            greenCount += xs[i] - greenStart - 1;
            count += xs[i] - strictGreenStart - 1;
          }
        }
        if (type === 'J') {
          if (color === 'yellow') color = 'red'
          else strictGreenStart = xs[i];
        }
        if (type === '7') {
          if (color === 'yellow') {
            color = 'green';
            greenStart = xs[i];
            strictGreenStart = xs[i];
          } else {
            color = 'red';
            greenCount += xs[i] - greenStart - 1;
          }
        }
      }
    }
  }
  count += input.reduce((sum, row) => sum + row.steps, 0);
  return count;
}

function parse(line) {
  const [direction, steps] = line.split(' ');
  return { direction, steps: Number(steps) };
}

function parse2(line) {
  const color = line.slice(-7, -1);
  return {
    direction: DIRECTION[color.slice(-1)],
    steps: parseInt(color.slice(0, 5), 16)
  };
}

const test = `
L 6 (#250012)
U 2 (#66d6a3)
L 4 (#0a6532)
U 6 (#391683)
L 5 (#1cc8a2)
U 6 (#67fb83)
L 3 (#a4d782)
U 4 (#108a13)
L 2 (#6b7482)
U 2 (#079253)
L 10 (#3c8902)
U 2 (#af1293)
L 3 (#3717a2)
D 5 (#72f323)
L 4 (#924242)
D 3 (#78d963)
L 3 (#1fda52)
D 8 (#0a91f3)
L 6 (#2e9710)
D 4 (#a886a3)
L 5 (#528f50)
U 8 (#abf733)
R 6 (#529b00)
U 6 (#abf731)
L 6 (#3423e0)
U 4 (#5ce023)
L 2 (#50ec50)
U 4 (#3e7493)
L 4 (#47a630)
D 9 (#3c3243)
L 3 (#9958d0)
D 5 (#003ba3)
L 3 (#23da02)
D 4 (#216133)
L 6 (#7c9fb2)
U 8 (#216131)
L 2 (#69e732)
D 8 (#925e73)
L 6 (#4e6ac0)
D 3 (#2f7513)
L 5 (#25df60)
U 2 (#3db943)
L 6 (#3328e2)
U 5 (#51f973)
L 4 (#3328e0)
U 5 (#501b63)
L 6 (#56cf50)
U 7 (#637341)
L 4 (#2e0570)
U 2 (#6f01e1)
L 3 (#043e50)
U 6 (#0d58f1)
R 4 (#0d03b0)
U 6 (#8ba163)
L 4 (#332200)
U 5 (#37caa3)
L 4 (#154480)
U 4 (#1b8403)
L 10 (#4555b2)
U 4 (#145f13)
R 10 (#34f5e0)
U 3 (#594963)
R 5 (#386ea0)
U 7 (#988ae1)
R 6 (#718770)
U 5 (#988ae3)
R 4 (#206390)
U 3 (#74ec43)
R 4 (#24bd82)
U 2 (#72e613)
R 7 (#1f90c0)
U 5 (#4ebf53)
R 3 (#1f90c2)
U 4 (#2c9223)
R 5 (#7746e2)
U 6 (#2c4b91)
R 3 (#5fef60)
U 3 (#9bfa31)
R 5 (#5fef62)
U 5 (#25f1c1)
R 3 (#634b22)
U 3 (#596363)
R 3 (#7342d2)
U 5 (#5389e3)
R 8 (#79a0c0)
U 5 (#808323)
R 3 (#3ef7c0)
U 3 (#0066d3)
R 4 (#345920)
U 3 (#17dca3)
R 5 (#23b5f0)
U 6 (#98ae93)
R 4 (#4b5950)
U 4 (#325bd3)
R 6 (#505ad0)
D 3 (#00e621)
R 8 (#83a610)
D 2 (#00e623)
R 3 (#109330)
D 3 (#6aec41)
L 4 (#6b4c40)
D 4 (#2abfe3)
R 4 (#504e50)
D 4 (#1217b3)
R 3 (#1f19e2)
U 3 (#54bf33)
R 4 (#1f19e0)
U 3 (#587c03)
R 4 (#4920a0)
U 4 (#202ca3)
L 8 (#2c4ad0)
U 3 (#00d033)
R 2 (#33ec50)
U 9 (#3d7301)
R 5 (#5fb112)
U 9 (#a8c8c1)
R 4 (#5fb110)
U 4 (#24d3d1)
R 4 (#1b58d0)
U 3 (#3cbb01)
L 6 (#971ad0)
U 2 (#4559c1)
L 7 (#1eab80)
U 3 (#12bb21)
R 3 (#3b53a2)
U 6 (#1de001)
R 6 (#527480)
U 4 (#891f41)
R 4 (#527482)
U 4 (#2c6721)
R 2 (#3b53a0)
U 6 (#0b9fd1)
R 5 (#1eab82)
U 9 (#4c0ab1)
R 2 (#505a90)
U 4 (#02a6f3)
R 4 (#49ae60)
D 3 (#4d0bd3)
R 5 (#7dc370)
D 5 (#1f6f33)
R 3 (#7dc372)
D 5 (#48d423)
R 3 (#1f1130)
D 4 (#4135f1)
R 5 (#6ca550)
D 3 (#32d741)
R 4 (#6ca552)
D 5 (#43e8e1)
R 2 (#3ad730)
D 4 (#12c563)
R 2 (#0f6610)
D 7 (#20bfc3)
R 5 (#6b4240)
D 8 (#7e95f3)
R 6 (#128150)
D 5 (#1cb943)
L 4 (#34d810)
D 2 (#628d33)
R 4 (#7c2e20)
D 4 (#063ea3)
R 3 (#45d630)
D 5 (#679661)
R 4 (#569210)
D 4 (#663391)
R 4 (#1578d0)
D 3 (#69d631)
R 5 (#4d4f50)
D 3 (#73a2c1)
R 3 (#5d09c0)
D 2 (#2b21c1)
R 3 (#40c440)
D 3 (#0597c3)
R 7 (#2b70e0)
D 3 (#4efb93)
R 2 (#4482d0)
D 3 (#613683)
R 2 (#6ff3b2)
D 4 (#3dadf3)
R 8 (#023a92)
U 5 (#9ce273)
R 8 (#023a90)
D 5 (#2cf583)
R 8 (#282510)
D 4 (#53e3e3)
R 3 (#2a47b0)
D 3 (#2c9d93)
L 3 (#787dc0)
D 6 (#509473)
L 8 (#0d7020)
D 4 (#3b2bf3)
R 11 (#3cf2f0)
D 4 (#8c95b1)
L 3 (#4e09d0)
D 8 (#8c95b3)
R 6 (#3b32e0)
D 8 (#432971)
L 6 (#544de0)
D 5 (#a52731)
L 5 (#34aa40)
D 4 (#06c573)
L 4 (#2b70b0)
U 5 (#0cb0b3)
L 2 (#5a0350)
U 7 (#0343b3)
L 3 (#54ed72)
D 4 (#4fce53)
L 3 (#3b6b20)
D 9 (#4e0de3)
L 2 (#3b6b22)
D 4 (#27e073)
L 4 (#54ed70)
U 10 (#013da3)
L 2 (#5d0b30)
U 3 (#552473)
L 4 (#203920)
U 4 (#185d63)
L 6 (#442e90)
U 4 (#1bd333)
R 3 (#1a0610)
U 2 (#5e8401)
R 8 (#5627f2)
U 3 (#3a77f1)
R 6 (#934972)
D 5 (#7e10b1)
R 7 (#934970)
U 7 (#098fd1)
L 2 (#5627f0)
U 2 (#466ca1)
L 8 (#2bf170)
U 7 (#1a90d3)
L 7 (#0d9b50)
U 6 (#59cfe3)
L 8 (#2ab792)
U 4 (#ae10f3)
L 4 (#1d7880)
D 3 (#5a7593)
L 10 (#1d7882)
D 3 (#63d6c3)
L 4 (#2ab790)
D 5 (#245e33)
R 7 (#6c0080)
D 2 (#83aa73)
R 7 (#6c0082)
D 4 (#0d4e73)
L 6 (#0d9b52)
D 3 (#6d8fc3)
L 6 (#220a40)
D 3 (#4a1f51)
L 7 (#5afe60)
D 3 (#71e3e1)
R 9 (#2d7f10)
D 2 (#71e3e3)
R 4 (#5435d0)
D 4 (#4a1f53)
L 5 (#105900)
D 2 (#354611)
L 4 (#2e5390)
D 8 (#858cb1)
L 4 (#8b0c20)
U 5 (#5b4291)
L 6 (#5788c0)
U 6 (#1fdbc1)
L 2 (#5aa4c2)
U 7 (#0e1701)
L 6 (#425112)
U 5 (#342a31)
L 3 (#296220)
U 2 (#4eccc1)
L 7 (#7393b0)
D 7 (#3da6a1)
L 3 (#0320a0)
D 8 (#546a21)
L 3 (#2b0f50)
D 2 (#65ea83)
L 2 (#8ae700)
D 3 (#42a903)
L 8 (#0357d0)
D 6 (#a89381)
R 8 (#109190)
D 3 (#37aa01)
L 3 (#591702)
D 4 (#3e0051)
L 9 (#15d272)
D 2 (#3e0053)
L 5 (#5af642)
D 3 (#1088b1)
R 11 (#144f70)
D 3 (#626251)
R 3 (#a9e230)
D 4 (#508ae1)
R 5 (#29bc32)
D 4 (#0c5f53)
R 3 (#6b87b2)
U 6 (#0c5f51)
R 8 (#8c9e92)
U 5 (#4be551)
R 3 (#49b532)
D 5 (#6b0e33)
R 7 (#369b92)
D 6 (#3339d3)
R 3 (#76f872)
D 3 (#708dd3)
R 9 (#5c29e2)
D 4 (#5b6d11)
L 4 (#67b4f2)
D 8 (#485a91)
L 6 (#1d62c2)
D 2 (#6b0e31)
L 5 (#268a82)
U 4 (#8abd01)
L 4 (#012712)
U 5 (#6315d1)
L 7 (#9d6232)
D 3 (#2bf171)
L 3 (#6c13b2)
D 6 (#023991)
L 9 (#5653b2)
D 6 (#8d1ea1)
R 7 (#2a1a82)
D 4 (#18b541)
R 4 (#587d52)
D 8 (#5289b1)
R 7 (#88acd2)
D 5 (#3c2d41)
R 8 (#551830)
D 7 (#79f0a1)
R 5 (#754eb0)
D 5 (#400d71)
L 2 (#6127d0)
D 2 (#7169e3)
L 7 (#83c870)
D 5 (#6b7981)
R 9 (#97ef40)
D 5 (#05f061)
R 4 (#24eee0)
D 2 (#062751)
R 3 (#4252e2)
D 3 (#022921)
R 2 (#0b34a2)
D 7 (#91d301)
R 5 (#0b34a0)
D 8 (#24dc71)
R 3 (#3e9c32)
D 8 (#190863)
R 5 (#65ecd2)
U 7 (#804f63)
R 3 (#65ecd0)
U 7 (#1f80d3)
R 6 (#4e29c2)
U 7 (#1e8811)
R 5 (#3f43f2)
U 8 (#38aeb1)
R 4 (#388472)
U 6 (#25adc1)
R 6 (#024352)
U 5 (#647a71)
L 4 (#8d0b82)
U 3 (#435721)
L 5 (#9f96a0)
U 3 (#2d8301)
L 4 (#968a00)
U 5 (#7c6cc1)
L 5 (#0e7be0)
U 2 (#0e1ca1)
L 9 (#320230)
U 3 (#08d9b1)
R 5 (#853850)
U 3 (#554221)
R 6 (#074670)
U 8 (#384ed1)
R 6 (#6d1af0)
D 5 (#438fc3)
R 5 (#69c1a0)
D 6 (#293513)
R 5 (#05c0c2)
U 4 (#152b63)
R 3 (#5d1d42)
U 4 (#3f1ce3)
R 8 (#aa11e2)
U 5 (#3730d3)
R 4 (#aa11e0)
D 5 (#4b0b43)
R 5 (#5d1d40)
D 5 (#05c4b3)
R 9 (#05c0c0)
U 2 (#056933)
R 7 (#246ae0)
U 6 (#3dbc21)
R 3 (#50f052)
U 5 (#66b331)
R 9 (#50f050)
U 4 (#220181)
R 2 (#043352)
U 6 (#21cef1)
R 3 (#994480)
U 3 (#65f181)
R 10 (#994482)
U 4 (#336041)
L 4 (#5bc462)
U 3 (#2ae0e1)
L 8 (#855130)
U 5 (#44e4d1)
L 5 (#34fb30)
D 8 (#6896a1)
L 3 (#32b082)
U 8 (#7893b1)
L 4 (#581f02)
U 6 (#7893b3)
R 4 (#2f7ce2)
U 5 (#25f411)
R 7 (#6dbea2)
U 7 (#34ade1)
R 7 (#28b982)
D 7 (#05ca11)
R 6 (#69d452)
U 6 (#05ca13)
R 5 (#229b22)
D 8 (#349bb1)
R 4 (#2602e2)
U 8 (#9ef471)
R 3 (#0b82d0)
U 2 (#2809a1)
R 2 (#14d330)
U 6 (#16db73)
R 4 (#23a870)
U 8 (#956bd3)
R 6 (#45f800)
D 8 (#ac4741)
R 3 (#513560)
U 9 (#3dbb21)
R 5 (#6dbea0)
U 10 (#73fb51)
R 5 (#610342)
D 9 (#499c21)
R 4 (#7f0282)
D 7 (#7acd71)
R 3 (#0da8a2)
D 3 (#3e07e3)
R 3 (#76f1d2)
D 6 (#4b72d3)
L 9 (#76f1d0)
D 3 (#3aeee3)
L 8 (#600462)
D 5 (#23ee13)
L 8 (#3a87c2)
D 5 (#1a0481)
R 3 (#68fae2)
D 9 (#7c97f1)
R 6 (#61ce72)
D 6 (#969c73)
R 3 (#625fc2)
D 5 (#6aba43)
R 3 (#248b62)
D 10 (#8a8013)
R 4 (#503ac2)
D 4 (#0e6aa3)
R 3 (#5e9b02)
D 5 (#3a4753)
R 3 (#385e02)
D 5 (#4870a3)
R 4 (#3eefd0)
D 10 (#960713)
R 4 (#2a41b0)
D 6 (#52b4a1)
L 4 (#505130)
D 6 (#1088a3)
L 5 (#905960)
D 3 (#1088a1)
L 9 (#040e30)
D 4 (#52b4a3)
L 3 (#4e1240)
D 4 (#297db1)
L 6 (#316b00)
D 3 (#6c8961)
L 6 (#037a30)
D 9 (#3b3833)
L 5 (#693040)
U 5 (#4d69f3)
L 3 (#395e00)
U 8 (#42c953)
L 5 (#24ac02)
U 4 (#6a9813)
L 7 (#006242)
U 8 (#0f0e71)
L 5 (#0f7052)
D 3 (#4a8521)
L 3 (#5d6822)
D 5 (#365561)
L 4 (#5e8bd2)
D 4 (#80da83)
L 4 (#1f6252)
D 8 (#0f0e73)
L 7 (#40e5a2)
D 5 (#6810d1)
L 6 (#774372)
D 8 (#397e23)
R 5 (#370822)
D 6 (#61cbf3)
R 3 (#9fbaf2)
D 2 (#4fd791)
R 4 (#3ae602)
D 5 (#4b7281)
R 5 (#748632)
D 5 (#651353)
R 9 (#0a06b2)
U 5 (#85f4b3)
R 3 (#24c432)
D 4 (#1e1a73)
R 3 (#634442)
U 4 (#345631)
R 3 (#4561c2)
U 5 (#6fb8f1)
R 4 (#262042)
D 3 (#56bd53)
R 7 (#0fb292)
D 4 (#6125a1)
R 4 (#51c8a2)
D 3 (#9cc963)
R 5 (#5831b2)
D 4 (#9cc961)
R 6 (#28c422)
D 3 (#6125a3)
R 3 (#018992)
D 8 (#56bd51)
L 3 (#3e9d72)
D 7 (#1eb123)
L 6 (#11ce90)
D 7 (#003ca3)
L 4 (#97e492)
D 3 (#759703)
L 8 (#1c7f72)
D 2 (#03fb53)
L 6 (#b46400)
D 3 (#5aeec3)
L 5 (#11ce92)
D 7 (#035c93)
L 4 (#047752)
U 7 (#8fa673)
L 3 (#535600)
D 6 (#176203)
L 6 (#1d33c2)
D 8 (#11f283)
L 6 (#9f2a92)
U 5 (#2ccba3)
L 7 (#21f3c0)
U 5 (#4051f3)
L 7 (#9a6a90)
U 4 (#2e3bf3)
L 2 (#535602)
U 6 (#606963)
L 3 (#60d142)
U 2 (#572f03)
L 3 (#5ee842)
U 7 (#77b233)
L 7 (#2d9e50)
U 5 (#2bad13)
L 6 (#050be0)
D 3 (#826bb3)
L 4 (#6b7990)
D 5 (#302623)
R 4 (#8b6a90)
D 7 (#302621)
R 4 (#983390)
D 7 (#438af3)
L 4 (#197c00)
D 4 (#043333)
L 2 (#594e72)
D 8 (#67c7a3)
L 5 (#2a63e2)
U 5 (#67c7a1)
L 2 (#371d52)
U 5 (#0ada73)
L 5 (#7fe5c2)
U 3 (#0ada71)
L 6 (#139392)
U 3 (#200a03)
L 6 (#8cf4f2)
U 3 (#619e03)
R 6 (#37a322)
U 3 (#5be181)
R 6 (#5c6b92)
U 5 (#588731)
R 7 (#043222)
U 3 (#9f80c1)
L 3 (#3ccb42)
U 4 (#9acc31)
L 6 (#6ee9d2)
U 9 (#2e2851)
L 4 (#5e8c40)
U 3 (#7edd21)
L 5 (#7bd7c2)
U 5 (#59e361)
L 3 (#6ae7b2)
U 3 (#11a231)
L 4 (#1fb8d2)
D 3 (#2f08f1)
L 5 (#455250)
D 5 (#2b72e3)
R 5 (#66e570)
D 7 (#2b72e1)
L 4 (#2eb950)
U 4 (#8bb9a1)
L 4 (#2b8730)
U 11 (#393031)
L 3 (#5e8c42)
U 3 (#0d4ce1)
L 4 (#410de2)
U 8 (#6789a1)
L 3 (#206852)
U 4 (#7cfcd1)
L 7 (#206850)
U 5 (#04e291)
L 4 (#856a82)
U 4 (#06be71)
L 3 (#6bf032)
U 4 (#2512a1)
L 6 (#072912)
U 4 (#833361)
L 4 (#375852)
U 7 (#af0473)
L 2 (#4b9822)
U 4 (#651351)
L 8 (#76e5b2)
U 2 (#4dd041)
L 2 (#117b62)
U 7 (#617761)
L 2 (#1c6bb2)
U 7 (#342be1)
L 5 (#86a912)
U 5 (#3dfed1)
L 3 (#b49020)
U 4 (#47d2a1)
L 4 (#b3e1e2)
U 7 (#333693)
`
  .trim()
  .split('\n');

console.log(fillLagoon(test.map(parse)));
console.log(fillLagoon(test.map(parse2)));
