const assert = require('assert');

function countPlotsReached(input) {
  const [_, __, start, nextPlot] = setup(input);

  let plotsReached = new Set([start]);
  let steps = 64;
  while (steps-- > 0) {
    const nextPlotsReached = new Set();
    for (const index of plotsReached) {
      for (let k = 0; k < 4; k++) {
        const next = nextPlot[4 * index + k];
        if (next >= 0) nextPlotsReached.add(next);
      }
    }
    plotsReached = nextPlotsReached;
  }

  return plotsReached.size;
}

function countPlotsReached2(input, steps = 26501365) {
  const [width, height, start, nextPlot] = setup(input);

  assert(input[0].split('').every(v => v !== '#'));
  assert(input[height - 1].split('').every(v => v !== '#'));
  assert(input.every(line => line[0] !== '#'));
  assert(input.every(line => line[width - 1] !== '#'));
  assert(width === height);
  assert(width % 2 === 1);

  const altHChannels = [];
  for (let j = 1; j < height - 1; j++) {
    let blocked;
    for (let i = 0; i < width; i++) {
      if (input[j][i] === '#') {
        blocked = true;
        break;
      }
    }
    if (!blocked) altHChannels.push(j);
  }
  const altVChannels = [];
  for (let i = 1; i < width - 1; i++) {
    let blocked;
    for (let j = 0; j < height; j++) {
      if (input[j][i] === '#') {
        blocked = true;
        break;
      }
    }
    if (!blocked) altVChannels.push(i);
  }

  const oddSteps = steps % 2 === 1;
  const oddStart = start % 2 === 1;

  const stepsToTopLeft = findStepsTo(0);
  const stepsToTopRight = findStepsTo(width - 1);
  const stepsToBottomLeft = findStepsTo((height - 1) * width);
  const stepsToBottomRight = findStepsTo(width * height - 1);

  const stepsToAltH = altHChannels.map(j => [
    findStepsTo(j * width),
    findStepsTo((j + 1) * width - 1)
  ]);
  const stepsToAltV = altVChannels.map(i => [
    findStepsTo(i),
    findStepsTo((height - 1) * width + i)
  ]);

  function findStepsTo(start) {
    const minSteps = new Int32Array(width * height).fill(-1);
    let steps = 0;
    let plotsReached = new Set([start]);
    const visited = new Set();
    while (true) {
      const lastVisitedCount = visited.size;
      const nextPlotsReached = new Set();
      for (const index of plotsReached) {
        if (!visited.has(index)) {
          minSteps[index] = steps;
          visited.add(index);
        }
        for (let k = 0; k < 4; k++) {
          const next = nextPlot[4 * index + k];
          if (next >= 0) nextPlotsReached.add(next);
        }
      }
      if (visited.size === lastVisitedCount) break;
      plotsReached = nextPlotsReached;
      steps++;
    }
    return minSteps;
  }

  const startToTopLeft = stepsToTopLeft[start];
  const startToTopRight = stepsToTopRight[start];
  const startToBottomLeft = stepsToBottomLeft[start];
  const startToBottomRight = stepsToBottomRight[start];

  let count = 0;
  for (let j = 0; j < height; j++) {
    for (let i = 0; i < width; i++) {
      if (input[j][i] === '#') continue;
      const index = j * width + i;
      const oddIndex = index % 2 === 1;
      const startCenter = oddSteps
        ? oddIndex !== oddStart
        : oddIndex === oddStart;

      const topLeft = stepsToTopLeft[index];
      const topRight = stepsToTopRight[index];
      const bottomLeft = stepsToBottomLeft[index];
      const bottomRight = stepsToBottomRight[index];
      if (topLeft < 0) continue;

      const topLeftMinSteps = startToTopLeft + bottomRight + 2;
      const topRightMinSteps = startToTopRight + bottomLeft + 2;
      const bottomLeftMinSteps = startToBottomLeft + topRight + 2;
      const bottomRightMinSteps = startToBottomRight + topLeft + 2;

      const topMinSteps =
        Math.min(
          startToTopLeft + bottomLeft,
          startToTopRight + bottomRight,
          ...stepsToAltV.map(([top, bottom]) => top[start] + bottom[index])
        ) + 1;
      const rightMinSteps =
        Math.min(
          startToTopRight + topLeft,
          startToBottomRight + bottomLeft,
          ...stepsToAltH.map(([left, right]) => right[start] + left[index])
        ) + 1;
      const bottomMinSteps =
        Math.min(
          startToBottomLeft + topLeft,
          startToBottomRight + topRight,
          ...stepsToAltV.map(([top, bottom]) => bottom[start] + top[index])
        ) + 1;
      const leftMinSteps =
        Math.min(
          startToTopLeft + topRight,
          startToBottomLeft + bottomRight,
          ...stepsToAltH.map(([left, right]) => left[start] + right[index])
        ) + 1;

      const topLeftExtend = Math.trunc((steps - topLeftMinSteps) / width) + 1;
      const topRightExtend = Math.trunc((steps - topRightMinSteps) / width) + 1;
      const bottomLeftExtend =
        Math.trunc((steps - bottomLeftMinSteps) / width) + 1;
      const bottomRightExtend =
        Math.trunc((steps - bottomRightMinSteps) / width) + 1;
      const topExtend = Math.trunc((steps - topMinSteps) / width) + 1;
      const rightExtend = Math.trunc((steps - rightMinSteps) / width) + 1;
      const bottomExtend = Math.trunc((steps - bottomMinSteps) / width) + 1;
      const leftExtend = Math.trunc((steps - leftMinSteps) / width) + 1;

      count += startCenter
        ? sumTriangleOdd(topLeftExtend)
        : sumTriangleEven(topLeftExtend);
      count += startCenter
        ? sumTriangleOdd(topRightExtend)
        : sumTriangleEven(topRightExtend);
      count += startCenter
        ? sumTriangleOdd(bottomLeftExtend)
        : sumTriangleEven(bottomLeftExtend);
      count += startCenter
        ? sumTriangleOdd(bottomRightExtend)
        : sumTriangleEven(bottomRightExtend);
      count += startCenter ? sumLineEven(topExtend) : sumLineOdd(topExtend);
      count += startCenter ? sumLineEven(rightExtend) : sumLineOdd(rightExtend);
      count += startCenter
        ? sumLineEven(bottomExtend)
        : sumLineOdd(bottomExtend);
      count += startCenter ? sumLineEven(leftExtend) : sumLineOdd(leftExtend);

      if (oddSteps && oddIndex !== oddStart) count += 1;
      if (!oddSteps && oddIndex === oddStart) count += 1;
    }
  }
  return count;
}

function setup(input) {
  const width = input[0].length;
  const height = input.length;

  let start;
  const nextPlot = new Int32Array(width * height * 4);
  for (let j = 0; j < height; j++) {
    for (let i = 0; i < width; i++) {
      const index = j * width + i;
      if (input[j][i] === 'S') start = index;
      nextPlot[4 * index] =
        i >= width - 1 ? -1 : input[j][i + 1] === '#' ? -1 : index + 1;
      nextPlot[4 * index + 1] =
        j >= height - 1 ? -1 : input[j + 1][i] === '#' ? -1 : index + width;
      nextPlot[4 * index + 2] =
        i <= 0 ? -1 : input[j][i - 1] === '#' ? -1 : index - 1;
      nextPlot[4 * index + 3] =
        j <= 0 ? -1 : input[j - 1][i] === '#' ? -1 : index - width;
    }
  }

  return [width, height, start, nextPlot];
}

function sumTriangleOdd(n) {
  n = n % 2 === 1 ? n : n - 1;
  return ((n + 1) / 2) ** 2;
}

function sumTriangleEven(n) {
  n = n % 2 === 0 ? n : n - 1;
  return 0.5 * n * (0.5 * n + 1);
}

function sumLineOdd(n) {
  n = n % 2 === 1 ? n : n - 1;
  return (n + 1) / 2;
}

function sumLineEven(n) {
  n = n % 2 === 0 ? n : n - 1;
  return n / 2;
}

const test = `
...................................................................................................................................
..#......##................#......#.#............#.....#....#.................#.......#.....#.#.....##.....#.#........#.#..#....#..
.......#....###...###.........##...#.#..#.....#......#...#................................................#.........##.#.#..#..###.
....#.....#..#.#.....#....#.#.##.#..........#...#.......................#...##......#...#.#.#....###.....#....#......#....#...#.#..
..##.#......##...##......#...#.#.#..##.#......#.........#............................#.........#...................#....#........#.
.#..........#....#.....#.....#..#.....#........#...........................#..#.#........#....#.#.....#.#...#..................#...
.#.#.#.#.#............#.....#.....#....#...........#.........................................#...#.......#....#....#.......#..#..#.
.#......##.#.#..............#....#.....####....#..#.............................#............#..............###.#.....#............
..#........#.........#....#................##..................#..#........................#.#.#.......###..#...#...#..............
.......#........#.......##.#..#.............................#.........................#........#........#.#.#..##..#..#.#......#...
.....#.#.#.##....................#.#.#....##.#....#...............#..###.......#.............#......#....#...#..#...............#..
.#..#...#.........#............#..#......#.#.....#...........#....#.....#..........#...........##......##.....#.#........#.........
........#.....#..#......#....#.#........##.#...........................#.......................##.....##..#........#.#......#.#....
..........#..#...............#..#..........#...#..........#.....#..#...#...........#..................#...................###..#.#.
.#..#......#..#...#.#..#.....#.....###.........#...........#.#............#........#.....###.......##.....#.#.#...........#........
.#.....#....##..##..#...........#.....#.......#.........#...#..............##..........#...#..#..#...#............#.#.#.......#....
.#..#.#.#.......#....................#................#.#................#..............#..#..##..#.#..#..###....#.....#..#........
...#.....#.......##..#............##.....#..#..........#......##.......#..............#.#..#.......#.........#.....................
..#.#.....#.......#....#.........##................##....#...#.......................................#.......#.#..##......#...#....
...........#.#.#.....#...#.#..#....#..#..............#.#.#....#....##...................#....#......#........#....#..##...#...#....
....#........#....#.#..##...##...................#.....#........#....#...#.#.#.#.............#.....#.#.......##..#.#.......#....#..
.##.#....#.......#.#......##.....#.#.#............#.......#........#...........................#.......##...#...##....#.........#..
.......#....#................#..##.............###.....#.............#....#......##........#.##...................#................
....#.......##.................#...................##..#..............#.......##..##...........#..##...#.#.....#...###.....#.......
.#.............................##................#......#...#...........#.#.#......#...........##.....##................#.#........
.#.##.#........##.........#.....##.#...........#...........#.#....##.....##.......#...........#..#.......#.##......#.....#...#...#.
...#...##.......#.#...#.......#...#.................#......#..#...............#.#.#........................#...........#.....#.....
.......#.#...#..##.........#.....#........#..##.#.#....#........#..##..........#...#..#..............#......##..#....#.......#.....
...##.......#..#......#...........................#..#.........#.............##........#.........#...#................#..###.......
.........................##................#.#...##....#......#.#..#....#....#....#..#..........................#.#..#.......#.....
....#.....#...#.........#..#............##...#..#........#........##.#..#...........#..........................#...#.....#......#..
.......................#..............#..#...#...............#..#.#..#..#...#...#.#..........................#.......#..#..........
....##.#.............#...#.................##....#......#....#.##........#...............##............##.#.................#...#..
...#...#..#...........#........................#....#.#.......#..........#.......##.......................##..#.#....#...........#.
..............#......##............#...##.#..........#....#....#.......#...................##..............#...#........#..#..#....
.......#............##..#.#........#....#.##....#.....#.#.#.....#......#....#..........#...#...#..................#....##..........
.............#....#...#..#..............#.......#........##...#...#..#....#...........##....#............#....#...#.#.#........#...
.#.....###.#.....................#..........#.#.....#..#...#.#.#.....................#.............................................
.#...#...........#.....#...........#....#....##.........#..#......#..#....#.....#....#.#...#..................##.........#..#....#.
.#.......#......................##.........................#....#...#......##......#........#......#.........#.......##.#...#......
....##...........#...#.......#.......##........#................#.......#.#.##.............#..#.#................##.....#..#...##..
..........#.#.................#..#..#...##.###.......##.#..#........##......##..##...#...#..#..#####.#.........#..#...#.#..........
..#....#..#.#...............#...............#.#..####......#..........##.#...##...#.#................#................#.##..##..#..
..........#....##..........#..............#.......#.......#.#...#..##.....................#.#.#....#...#...........#...............
...#.......#.................#...........#..#........#...#..............#..............#....#...##....................#...#........
...####...#.............##.....#............#.##.....#...#..#.#......#.............#.........##....##...................#.#...#....
....#.....#.............#.....##...#..#...........#..#.....#......#.#.....#......#.....#....#......#...............................
.....#...#..##.............#....##...#.......#...##......##.....#.......#...#........................#.#.......................#.#.
.###.....#...#................#....#.....................###.#....#..#.#....................#....................................#.
...#..................#..#..#........##....#..#.#.##..#.#...#.........#..#.#...#...............#...........##..........##.#........
...........#..................#.............#...#.#.#......###..........#...#.......#.......#....#........#.#...........##.........
.......#..#.......##..#............................##.....#.#..#.......##.....#...#.......#...........#....#...#...................
...#.............#.................#.#.###......##.........####.....#..##.............#.......##.....#....................#........
.#................#.#..#..#..#..##.....#.......#..#.....#.......#....#.......#.............#.##......#.#.....#..............#..#...
.....#.................#...#....#.#...#.#......#.#...........#............#...#..........................###...#.................#.
...........................#..#.#..#...#...............#...#...#....#...........##...........#...#..#.#........#..###........#.....
..................##....##......##.#........#..#...........#......#..............#........#...#..............#...#.#..........##...
...#...............#...###..#...........#.....#.......##.#...#..........##.....#........#.#.#..................##..#............#..
..#........#......#.....#.........#.......##......#..........#...........#..#.##....#...................#.##.......##..........##..
...............#...##....###.........#...#..............#.#.......#...#.....#.........##..#.......##..............#................
............#........#......##.#................##...#.....##...#.....##.......#..................#........#.##.#.....#.##.........
..........#....#....#...##..#.#..........#.............##..#......#.#......#.#..............#........#...#..#............##........
...........#.......##...#......#..#......#.#.......#.........#...........#.....#..##...#...##..............##........#.#..#........
............#....#.......#..........#..##..#...##...#.#.#.....#............#.#.......#.#..#........##......#....#.#.....#..........
.......................#...........##.#..........#.....#.#.#..........#.#.............................#....##.....##......#..#.....
.................................................................S.................................................................
.....#.##.#..........#..#..#........#.#...#......#......#....#.#.....#.#..............................#.............#.....#........
......#.....#....#..#........#.....#.........#........#..#...#.......#.#.....##.....##....#..#.#..#.#..........#....#...#..........
...................##....#........#.#.........#.......#........................#.....#.#...#..###.......###..#...#.....##..........
.........#.#...#.#.#.#......#............#....#.#........................#.......#.#.#........#..............#..#.#...#............
...............#..#.#...#..#......#....#....#.......##...............#.#.#..#......#...##.........................#................
.#.....................#..#..#..............#....#...#...#....##....#.#...#.......##.#...........###...#.......#####...............
..#........#............#.#...#.......#...#...........#......#....#...........#..#..............#....#..#...##.......#..........##.
.#.#.....................#..............#.#.........#.#...............#......#......#.#..##...#......#......#........##............
..............#....#.#....##.##.....#........#...............#..........................#...#....#.##.........#....................
..................##...............##..#....##..............#.....#...#........#.#...#...............###....#................#.###.
.#...#............#.#.#..##....#......#........#.#........#.....#......#.......##.....#.#.#.....................#..................
...#.#.............#.............#.#.##...#.#.............................................#....##..#.#.....#..................#....
......#............#...#.......#.#..#......#.......#.....#.#.......#...##....##....##.............####...................#..#......
.........#........#.....#..#...........#.#.......##.#..#....#..#.....#.#..#.#....#......#...................#.............#....#.#.
......#................#..................#............#.............#.....#.........#...##.....#.#.##..#..###.........##.......#..
.............................#....#.....#.#............##....#..#......#..#.#....#.................#....#...#.........#............
....#.#.....................#........#.........##..............#...#..............................#....#.................#.......#.
.#..#.................#..........#..#....#........##..#...............#......####.....#....#.....#..#....###........#.#.........#..
....##........#.........#...#..##.#.##....#......##........#......###..........#.#...#....#..#......................#........##....
........#.....#.#.........#......#.#........#....#..##....##................##.......#...#........#...........................#....
.#...........#............#..........#.......#.##.......#.#........#...#..###...#..#......#.............#................##....##..
..................#..........##...##....##.#.....#.....####........##........#...#.........#...#.....#..#...........##......#..#.#.
...............#.....................#................#...#....#......................#.#.......#...............#.....#......#...#.
...#............#.............#.##...................#....#...#.....#...#...........#.#...#........#................##.....#.......
...........#........#..................#.#..#.#.....#...............#.....#.#........##.......#..#.#..........#.............#......
..#.....#....#.#.................#.#.........#.......##.....#.........#.....#...............#.#...##.......................#....#..
......###....#....#.#..#....................#....#....#..#........#...#.#...##........#..##........#............#.........#....#.#.
...#.#.....#....#......#.........#..##...#.##...#....#..##..#.#........#..##.#.................#...................................
.........###.#...#...#...........................#.........#.#.##....#.#...#..........#..#.......#.........##.....#......#...#.#...
.................#.....#..........#.#..#..###..................#........##....#.........#...................#....#.........#.....#.
.#..#....#..#...#.....#............#.#..........#....#.#..#..##......................#..#..#......................#.............#..
..#..#.#...#..#.....#...............................#.........##......#.............#.##...............#..#.##.......##..#.......#.
.....#...#.#....#...#..#..............#......#.#................#....#..#...........#.....#.#................#.##.........##.......
....#......##.........#.#...#.........#......#.##...##........#....#.................#......................###......#.....##......
...#.#.....#.....#.#.#.#...............#..#.....#.#...............#.#.........##.....##..#...................#.......#.#...........
..#.....#..#.....#...##....##..##.........#...#....#....#...#......##.##..#..#.........#............#..#.##...................#....
...#....###...#..........##......#........#..........#.............###.....#.....#..#.#...............#...##....#...##..#..#...#.#.
...#................#.........#................#..#..#..#.#...............#.....#...................#.................#...#........
.#.......#.#.#.#.......#...................#...#......##.....#........##.....#...#........................#..#..#....#......#..#...
..##..#....#...#.......#........#...#....................###........##............#...............#....#.......#............#......
.#............#.....#...##....#.......................#..#....#........#..........#..#...........#..#........................#.....
..........###....#..#.#..#..#.........#.......#...#......#....#...#.............#............#.....................#.#...#.......#.
...#..#..............................#.........#........##....##....##..##.....##......................#........#.....#...#...#.#..
.#.#.................##.......#.#.#.....................#.....#........#......##.............#.......#..##....##........#.#.#......
...##.#.#..#...#........#......#.....#....................#........#.#.....#...#................#........#...#.##.....#..#.......#.
.##.#.......#..#....#..#....#......#.....................#...........#......#.#..............#...#......#.#.......#......#.#.......
....#................###...#.......#...#..##........#...................#.......................#..##.......#................###...
.........##.....#.....##..........#....#..##.............#.....##......##....#..................#..##.................#...#........
.#..#....#....#.#........#..#................#............#.......#........#...................................##........#.......#.
.........##...#........#.#............#.......#..........#.................#..........................#......##.....#....#.#....##.
...##......................#.....#....#.##...................#.............#..............#....#......#.............#........#.....
....#...........##.......#...#.....#.......#..#................#........##......................#..#....#..##.....#.#..............
......#..#...#......#.......#.....#.#..........#................#................#.....#.#.#....#...#..............................
....#....#..#...##..##.......#...................##..............................#........#................#....#..........#..#.#..
....#...##.....##...#......#.............#.......#..............................#..........#...............................#.#.....
.##.#.....#..#.......#..##................#..#..##..#..........#..............#..#.#....#.#..#..##.#....#.##..#............#.....#.
....#..#.#............##.....##.............###.#............#.#.....#....................#.#........#....#.#..#..#...........#.#..
.#.......#..................#...................#....#..........#...........#....#......#.........#.............##...............#.
..#...............##..#.#...###.....#...#....#....#...#........#..#....................##.#.......#...#.......#................#...
..#.##..........##......#...#.#.#.#.....##.....#.##..#..#.........#........#....................#.................#............##..
....#...##.......##....##...#.#..............#.....#......................#.#......#...................#..#.#...##.#..........#..#.
.#.#....#..##..#..............###.......................###................#..#..#..##....#....#............##..#..................
......#..#......#.........#.#.#...#.......................##..............##...#.....##.#....#......#....#.........#.......#.....#.
....#.........#...............#...#............#.........#................##.#..........#.............#.......................#.##.
...................................................................................................................................
`
  .trim()
  .split('\n');

console.log(countPlotsReached(test));
console.log(countPlotsReached2(test));
