const { intcode } = require('./common')

function scan (input, w, h) {
  let sum = 0
  for (let y = 0; y < h; y++) {
    // let line = ''
    for (let x = 0; x < w; x++) {
      const program = intcode([...input])
      program.next(x)
      program.next(y)
      const out = program.next().value
      sum += out
      // line += out ? '#' : '.'
    }
    // console.log(line)
  }
  return sum
}

function closestPoint (input, start) {
  const t = trace(start[0], start[1], input)
  const edges = []
  let i = 0
  while (true) {
    edges.push(t.next().value)
    if (edges.length >= 100 && edges[i - 99].trailing[0] - edges[i].leading[0] === 99) break
    i++
  }
  const last = edges[edges.length - 1]
  return [last.leading[0], last.leading[1] - 99]
}

function * trace (x, y, p) {
  let x1 = x
  let x2 = x
  while (true) {
    const x10 = Math.floor((x1 - 1) / y * (y + 1)) + 1
    const x11 = x1 / y * (y + 1)
    x1 = Math.ceil(x11)
    for (let i = x10; i < x11; i++) {
      const program = intcode([...p])
      program.next(i)
      program.next(y + 1)
      if (program.next().value === 1) x1 = i
    }
    const x20 = Math.ceil((x2 + 1) / y * (y + 1)) - 1
    const x21 = x2 / y * (y + 1)
    x2 = Math.floor(x21)
    for (let i = x20; i > x21; i--) {
      const program = intcode([...p])
      program.next(i)
      program.next(y + 1)
      if (program.next().value === 1) x2 = i
    }
    y = y + 1
    yield {
      leading: [x1, y],
      trailing: [x2, y]
    }
  }
}

const test = '109,424,203,1,21102,1,11,0,1106,0,282,21101,0,18,0,1105,1,259,2102,1,1,221,203,1,21102,31,1,0,1106,0,282,21101,38,0,0,1106,0,259,21002,23,1,2,21202,1,1,3,21102,1,1,1,21102,57,1,0,1106,0,303,2102,1,1,222,21001,221,0,3,21002,221,1,2,21101,0,259,1,21102,1,80,0,1106,0,225,21102,1,93,2,21102,1,91,0,1106,0,303,2101,0,1,223,21001,222,0,4,21102,1,259,3,21101,225,0,2,21101,225,0,1,21101,118,0,0,1106,0,225,20101,0,222,3,21102,1,120,2,21102,1,133,0,1106,0,303,21202,1,-1,1,22001,223,1,1,21101,0,148,0,1106,0,259,2102,1,1,223,21001,221,0,4,20102,1,222,3,21102,1,23,2,1001,132,-2,224,1002,224,2,224,1001,224,3,224,1002,132,-1,132,1,224,132,224,21001,224,1,1,21102,195,1,0,106,0,108,20207,1,223,2,20101,0,23,1,21101,-1,0,3,21102,1,214,0,1106,0,303,22101,1,1,1,204,1,99,0,0,0,0,109,5,2101,0,-4,249,21201,-3,0,1,21201,-2,0,2,21202,-1,1,3,21101,0,250,0,1105,1,225,21202,1,1,-4,109,-5,2106,0,0,109,3,22107,0,-2,-1,21202,-1,2,-1,21201,-1,-1,-1,22202,-1,-2,-2,109,-3,2106,0,0,109,3,21207,-2,0,-1,1206,-1,294,104,0,99,22102,1,-2,-2,109,-3,2106,0,0,109,5,22207,-3,-4,-1,1206,-1,346,22201,-4,-3,-4,21202,-3,-1,-1,22201,-4,-1,2,21202,2,-1,-1,22201,-4,-1,1,21201,-2,0,3,21102,343,1,0,1106,0,303,1106,0,415,22207,-2,-3,-1,1206,-1,387,22201,-3,-2,-3,21202,-2,-1,-1,22201,-3,-1,3,21202,3,-1,-1,22201,-3,-1,2,21201,-4,0,1,21101,0,384,0,1106,0,303,1105,1,415,21202,-4,-1,-4,22201,-4,-3,-4,22202,-3,-2,-2,22202,-2,-4,-4,22202,-3,-2,-3,21202,-4,-1,-2,22201,-3,-2,1,21202,1,1,-4,109,-5,2106,0,0'.split(',').map(Number)

console.log(scan(test, 50, 50))
console.log(closestPoint(test, [5, 4]))
